---

# [lb]: I originally built Vim from source starting 2017-02-27 to support
# Command-T (activated by <Ctrl-D>), which requires that Vim be built with
# Ruby, and that the version of Ruby match that of the OS. Or so I'm led
# to believe. But that's why I needed to build Vim myself, because I was
# also installing the latest (non-system) version of Ruby.
#
# But now I build Vim so I can change the Alt-tab icon that's used when
# switching apps in my OSes (Mint MATE, and macOS).
# - So I've TIPped the project (forked it, and added a commit)
#   to replace the Vim icon with Burglar Bender.

# This playbooks checkouts my branch before building it, effectively:
#
#   $ git clone https://github.com/landonb/vim.git && cd vim
#   $ git checkout {{ VIM_BRANCH }}

# ***

- set_fact:
    VIM_BRANCH: "tip/2022-10-05--346823d--v9.0.0667"
    # If you want to build upstream's main branch, change the branch:
    #  VIM_BRANCH: "master"

# ***

- set_fact:
    VIM_DIR: "{{ zoidy_homefries_vim_repo_path }}"

- set_fact:
    VIM_DIR: "{{ zoidy_homefries_downloads_dir }}/vim"
  when: VIM_DIR == ""

- name: Vim âˆ· git clone
  git:
    # repo: "git@github.com:vim/vim.git"
    # remote: upstream
    repo: "git@github.com:landonb/vim.git"
    remote: origin
    dest: "{{ VIM_DIR }}"
    version: "{{ VIM_BRANCH }}"
  # LATER/2020-03-06: Use gitclone and check ~/.local/bin/vim symlink
  #                   to decide whether to (re)build.
  #                   - For now, this playbook will always rebuild.
  # register: gitclone

# ***

# E.g., `make clean`
- name: Clean Vim build
  make:
    chdir: "{{ VIM_DIR }}"
    target: clean

# 2017-11-03: If command-t does not work, Ctrl-D shows error, e.g.,:
#
#   Vim Ruby version: 2.3.1-p112
#   Expected version: 2.3.3-p222
#
# Make sure you build command-t with the system Ruby:
#
#   cd ~/.vim/pack/wincent/start/command-t/ruby/command-t/ext/command-t
#   chruby system
#   ruby extconf.rb
#   make

# 2017-11-03: I am not sure these environs do anything,
#   since the build just uses the system ruby...
#
#  export RUBY_VER=23
#  export RUBY_VER_LONG=2.3.3

# See `./configure --help`
# - Add ruby for commandt
# - Add python3 for ternjs
# - Add python2 for vim-instanbul
#
# Two ways to install dependencies:
# - Blindly, via
#     sudo apt-get build-dep vim
# - Or with familiar knowledge of required packages, e.g.,
#     sudo apt install libncurses5-dev libncursesw5-dev
# - See zoidy_mintyfresh for package installation
#   (so you don't have to run this task with -K/credentials):
#     tags: install-develop-vim

- name: Configure Vim build
  ansible.builtin.shell: |
    ./configure \
      --enable-luainterp=yes \
      --enable-perlinterp=yes \
      --enable-pythoninterp=yes \
      --enable-python3interp=yes \
      --enable-rubyinterp=yes \
      --prefix={{ ansible_env.HOME }}/.local
  args:
    chdir: "{{ VIM_DIR }}"

# PROFILING: 2019-03-19: Task took: 24.74s (currently slowest task in ZP-HF).
- name: Build Vim
  # -j 3 to use 3 CPU cores to build.
  ansible.builtin.shell: make -j 3
  args:
    chdir: "{{ VIM_DIR }}"

# E.g., `make install`
- name: Install Vim
  make:
    chdir: "{{ VIM_DIR }}"
    target: install

# Verify that the correct Ruby was enabled by comparing:
#   :ruby puts RUBY_DESCRIPTION
#   :!/usr/bin/ruby -v
# MAYBE/2018-12-26: Add verification step to this task. [Meh.]


---

# USAGE: Task downloads and installs Arduino from zip archive.

# ***

# CXREF: http://www.arduino.cc/
#
#   https://www.arduino.cc/en/software
#
#   https://docs.arduino.cc/software/ide-v2/tutorials/getting-started/ide-v2-downloading-and-installing/

# MAYBE/2023-04-25: Convert to AppImage install, e.g.:
#
#   https://downloads.arduino.cc/arduino-ide/arduino-ide_2.3.0_Linux_64bit.AppImage
#
# - Except this task already writ, and fairly simple, so... why bother.
#
# - MAYBE/2024-02-08: AppImage might also require 2 additional steps
#   (and maybe downloading the archive, too, but I haven't run Arduino
#   in a few years; haven't tinkered much with hardware lately).
#
#   From doc referenced above:
#
#   - "In case you cannot run the AppImage file, make sure that FUSE
#      is installed on your system":
#
#     sudo add-apt-repository universe
#     sudo apt install libfuse2
#
#   - "To enable the Arduino IDE to access the serial port and upload code to your
#      board, the following rule can be added to /etc/udev/rules.d/99-arduino.rules":
#
#     SUBSYSTEMS=="usb", ATTRS{idVendor}=="2341", GROUP="plugdev", MODE="0666"

- ansible.builtin.set_fact:
    # 2024-02-08:
    ARDUINO_VER: "2.3.0"
    # 2023-04-25:
    #  ARDUINO_VER: "2.1.0"
    # 2019-01-04:
    #  ARDUINO_VER: "1.8.8"

- ansible.builtin.set_fact:
    # 2023-04-25:
    ARDUINO_ARC: "arduino-ide_{{ ARDUINO_VER }}_Linux_64bit.zip"
    # 2019-01-04:
    #  ARDUINO_ARC: "arduino-{{ ARDUINO_VER }}-linux64.tar.xz"

- ansible.builtin.set_fact:
    ARDUINO_DIR: "arduino-{{ ARDUINO_VER }}/arduino-ide_{{ ARDUINO_VER }}_Linux_64bit"

- ansible.builtin.set_fact:
    # 2023-04-25:
    # - E.g., https://downloads.arduino.cc/arduino-ide/arduino-ide_2.1.0_Linux_64bit.zip
    ARDUINO_URL: "https://downloads.arduino.cc/arduino-ide/{{ ARDUINO_ARC }}"
    # 2019-01-04:
    #  ARDUINO_URL: "http://www.arduino.cc/download.php?f=/{{ ARDUINO_ARC }}"

# ***

- name: Fetch Arduino archive
  ansible.builtin.get_url:
    # The package is a simple script to download the latest actual Dropbox code.
    url: "{{ ARDUINO_URL }}"
    dest: "{{ zoidy_homefries_downloads_dir }}/{{ ARDUINO_ARC }}"

# 2023-04-26: Arduino 2.1.0 does not unpack to top-level dir like 1.8.8,
# so specify that top-level unpack path.
- name: Create/Ensure Arduino archive unpack path
  ansible.builtin.file:
    path: "{{ zoidy_homefries_downloads_dir }}/{{ ARDUINO_DIR }}"
    state: directory

- name: Unarchive Arduino archive
  ansible.builtin.unarchive:
    remote_src: yes
    src: "{{ zoidy_homefries_downloads_dir }}/{{ ARDUINO_ARC }}"
    dest: "{{ zoidy_homefries_downloads_dir }}/{{ ARDUINO_DIR }}"

# 2023-04-26: Arduino 1.8.8 used ./install.sh script; Arduino 2.1.0 ready to go.
- name: Symlink Arduino executable from user bin
  ansible.builtin.file:
    src: "{{ zoidy_homefries_downloads_dir }}/{{ ARDUINO_DIR }}/arduino-ide"
    dest: "{{ ansible_env.HOME }}/.local/bin/arduino-ide"
    state: link

# Fix it so normal users can hook US port (otherwise you have to `sudo arduino`, blech).
# - DUNNO/2023-04-26: I assume this still valid for Arduino 2.1.0 (it was for 1.8.8)
#                     but unconfirmed.
- name: 'Add user to dialout group'
  become: true
  ansible.builtin.user:
    name: "{{ ansible_env.LOGNAME }}"
    groups: dialout
    append: yes


---

# USAGE: Task downloads and installs Dropbox from desktop client build archive.

# ***

# SAVVY/2024-03-20: Dropbox makes a mess of the Linux install.
#
# - This task used to install an old deb package (2020.03.04),
#   because that's what their employees suggest that you do
#   (per the Dropbox forum posts I found and read).
#
#   - But that package griefs me on Linux Mint 21.3 — it installs,
#     but `dropbox status` emits a complaint, and (I could swear,
#     but now I doubt myself) it doesn't keep my ~/Dropbox synced.
#
# - I also tried the latest deb package from the official Dropbox
#   install page, but that fails to install, seemingly telling you
#   to install the 'libgtk-4-1' dependency.
#
#   - But it fails just the same after installing said dependency.
#
# - Fortunately, I found a link to the Dropbox desktop client builds
#   (from a buried forum response), which works.
#
#   - Which is also the same archive as the headless install from
#     the Dropbox install page. It's the Dropbox daemon, but not
#     the `dropbox` CLI command you're familiar with.
#
#   - Specifically, the `dropbox` binary from the client build is
#     the daemon. It's not the same `dropbox` that ships with the
#     deb package. Fortunately, we can download a separate
#     `dropbox.py` which is the CLI frontend. And we'll symlink
#     it as ~/.local/bin/dropbox so that you can call `dropbox`
#     like you normally do. And so that you can have Dropbox
#     start on boot (via ~/.config/autostart/dropbox.desktop).
#
# CXREF/2024-03-20: This task installs a desktop client build:
#
# - *Dropbox desktop client builds*
#
#   — These archives contain pre-built dropbox binaries and libraries.
#
#   - The archives include the same files that the deb package installs
#     to ~/.dropbox-dist (the deb packages themselves don't contain
#     Dropbox, they just download the latest version, which is probably
#     why the old 2020.03.04 deb package is supposed to work).
#
#   https://www.dropboxforum.com/t5/Dropbox-desktop-client-builds/bd-p/101003016
#
#   - 2024-03-20: Here's the latest build:
#
#     https://www.dropboxforum.com/t5/Dropbox-desktop-client-builds/Stable-Build-195-4-4995/td-p/758452
#
#     https://clientupdates.dropboxstatic.com/dbx-releng/client/dropbox-lnx.x86_64-195.4.4995.tar.gz
#
#   - This is likely (I didn't verify) the same Dropbox Headless Install
#     download you'll find at the bottom of https://www.dropbox.com/install
#
# - *Dropbox CLI client*
#
#   - This is the `dropbox` command that the deb packages install:
#
#     https://www.dropbox.com/download?dl=packages/dropbox.py

# CXREF/2024-03-20: Here are links to the problematic deb packages:
#
# - Dropbox install webpage (these all look the same):
#     https://www.dropbox.com/install
#     https://www.dropbox.com/install?os=lnx
#     https://www.dropbox.com/install-linux
#
#   - Latest package:
#       https://linux.dropbox.com/packages/ubuntu/dropbox_2024.01.22_amd64.deb
#
# - Dropbox deb archives:
#     https://linux.dropbox.com/packages/ubuntu/
#
#   - Latest package (same as the one from the install page):
#       https://www.dropbox.com/download?dl=packages/ubuntu/dropbox_2024.01.22_amd64.deb
#
# SAVVY: Trying the deb packages don't work.
#
# - Installing the latest deb package throws the error:
#
#     $ sudo dpkg -i dropbox_2024.01.22_amd64.deb
#     Dependency is not satisfiable: libgtk-4-1 (>= 4.8.0)\n"}
#
#   But installing said dependency (`apt install libgtk-4-1`)
#   doesn't change the behavior.
#
# - On the Dropbox forums, per employees, and other Q/A sites, people
#   suggest installing an old version, 2020.03.04, which worked for me
#   on Linux Mint 19.3, but not on 21.3.
#
#   On LM 21.3, I see errors when using the old 2020.03.04 package:
#
#     $ dropbox status
#       /usr/bin/dropbox:614: DeprecationWarning: isSet() is deprecated, use is_set() instead
#         if self.stop_event.isSet(): break
#       Up to date
#
#   And while it seems to be running, my files are not updated.
#
#   - Or at least I don't think they were. Though it appears Dropbox
#     was keeping ~/.dropbox-dist/ updated, because I saw thereunder:
#
#       $ ll ~/.dropbox-dist/
#       -rwxr-xr-x  1 user user  103 Mar 18 17:54 dropboxd*
#       drwxrwxr-x  6 user user 4.0K Mar 18 17:54 dropbox-lnx.x86_64-195.4.4995/
#       -rw-rw-r--  1 user user   10 Mar 18 17:54 VERSION
#
#     - Indeed, when I compare the binary that the deb package installed
#       against the binary I got from the client build, they're the same:
#
#         $ diff \
#             ~/.dropbox-dist/dropbox-lnx.x86_64-195.4.4995/dropbox \
#             ~/.downloads/Dropbox/.dropbox-dist/dropbox-lnx.x86_64-195.4.4995/dropbox
#         # No diff.
#
# - Whatever. This task is a (complete?) replacement of the deb package.
#
#   - It installs the daemon from a *Dropbox desktop client build*,
#     what the install page calls a Dropbox Headless Install.
#
#   - And it installs the Python CLI script and renames it to `dropbox`
#     so that everything should work like it does from the deb package.
#
#   - DUNNO/2024-03-20: But I'm unsure if Dropbox will keep itself updated.
#
#     - I ran `dropbox update` which prompted me to download the
#       "proprietary daemon", except it downloaded an older version:
#
#         $ ll ~/.dropbox-dist/
#         -rwxr-xr-x 1 user user  103 Mar  2 17:27 dropboxd*
#         drwxrwxr-x 6 user user 4.0K Mar 20 04:04 dropbox-lnx.x86_64-194.4.6267/
#         drwxrwxr-x 6 user user 4.0K Mar 18 17:54 dropbox-lnx.x86_64-195.4.4995/
#         -rw-rw-r-- 1 user user   10 Mar  2 17:27 VERSION
#
#       - I then ran `dropbox update` again, and same deal, it prompts
#         and then downloads and overwrites the same version (194.4.6267).
#
#     - So next I downgraded to 194.4.6267, and `dropbox update` behaves
#       the same: It prompts you to download the "proprietary daemon",
#       and then it downloads the same version, overwriting
#       ~/.dropbox-dist/dropbox-lnx.x86_64-195.4.4995.
#
#     - Finally, I downgraded to 193.3.5459, then ran `dropbox update`,
#       and this time it killed the old daemon after downloading
#       194.4.6267.
#
#       It also popped up an error dialog:
#
#         Could not start the Dropbox daemon. Make sure your computer
#         meets the minimum requirements:
#
#         https://www.dropbox.com/help/desktop-web/system-requirements#desktop
#
#       but it also successfully restarted the daemon, and
#       `dropbox version` correctly reports 194.4.6267.
#
#       - At least I verified that `dropbox update` (kinda) works, even
#         if it doesn't download the most recent release (195.4.4995)
#         (and even if it reports failure even though it succeeds).
#
#         - Perhaps Dropbox doesn't deploy the latest builds immediately,
#           or perhaps 195.4.4995 is an intermediate build (like a beta,
#           even though it's marked "stable").
#
#           - Given that, this task won't install 195.4.4995, but we'll
#             stick with what `dropbox update` installs, 194.4.6267.
#
#       - OYEAH/2024-03-20: Confirmed: Dropbox downloaded the latest
#         release on its own. The version is now '195.4.4995'.
#
#         - It also moved the ~/.dropbox-dist symlink to
#           ~/.dropbox-dist-old-w4luy7ep, and it created
#           a new directory at ~/.dropbox-dist. So let's
#           not use a symlink for that directory.
#
#     - So `dropbox update` kinda works, it just doesn't
#       seem to know that it worked.
#
#       - This sorta matches a weird `dropbox start` message, too.
#         The start command also seems to think it fails, outputting
#         "Dropbox isn't running!" before outputting "Done!",
#         even though the daemon ends up running. Such confusion!
#
#       - I wonder if it's because this task installs Dropbox
#         to user space (or that it symlinks ~/.dropbox-dist
#         to the archive that's downloaded and unpacked under
#         ~/.downloads). Whatever, I can live with this....
#
#     - It's also difficult to say if the "proprietary daemon"
#       popup is how `dropbox update` always works (like, if you
#       ran `dropbox update` on the CLI from the deb package).
#
#       - Though I bet the "Could not start the Dropbox daemon"
#         and the "Dropbox isn't running!" messages are because
#         of the headless install (or something funky about how
#         this task sets things up, though I wouldn't think it's
#         a PATH issue, because `dropbox update` kills the deamon
#         and successfully starts the new one, even if it doesn't
#         think is was successful).
#
#     - SAVVY: Regardless of `dropbox update`, I've confirmed
#       that the daemon installed by this task will automatically
#       update itself.
#
#   - GRIPE: I will say all this is quite annoying. But at least it's
#     working again. Kinda sucks their offical install page is helplessly
#     incorrect/misleading, and that the headless install notes don't
#     mention that `dropbox.py` is what the deb package installs as
#     `/usr/bin/dropbox` (and is not the same as the `dropbox` binary
#     from the client build archive). Also that, in the forums, they
#     say they don't support Linux Mint, even though they support
#     Ubuntu — and because Mint is a Ubuntu derivative, it should
#     work the same (but without an Ubuntu instance running, I can't
#     verify, but I wouldn't be surprised if people running the latest
#     Ubuntu aren't also suffering problems with the deb package).

- set_fact:
    # 2024-03-20: See notes above: `dropbox update` installs
    # 194.4.6267, even though 195.4.4995 is the latest release.
    # So we'll install what `dropbox update` thinks is the latest
    # release (let's not risk installing a possibly unvetted build
    # (even though it's marked "stable"); let's find out later if
    # `dropbox update` will eventually install the latest build
    # (195.4.4995); and let's see if the daemon itself will auto-
    # update (so we don't have to plumb a `dropbox update` cronjob,
    # or something)).
    #
    #  DROPBOX_BUILD_VER: '193.3.5459'
    DROPBOX_BUILD_VER: '194.4.6267'
    #  DROPBOX_BUILD_VER: '195.4.4995'

- set_fact:
    DROPBOX_ARCHIVE: "dropbox-lnx.x86_64-{{ DROPBOX_BUILD_VER }}.tar.gz"

- ansible.builtin.set_fact:
    DROPBOX_UNARCHIVE: "{{ zoidy_homefries_downloads_dir }}/Dropbox"

# 2024-03-20:
# https://clientupdates.dropboxstatic.com/dbx-releng/client/dropbox-lnx.x86_64-195.4.4995.tar.gz
- name: Fetch Dropbox Linux x86_64 Offline Installer
  get_url:
    url: "https://clientupdates.dropboxstatic.com/dbx-releng/client/{{ DROPBOX_ARCHIVE }}"
    dest: "{{ zoidy_homefries_downloads_dir }}/"
    # Just a reminder that Dropbox doesn't provide a checksum:
    #  checksum: "sha256:{{ <sha> }}"

# ***

- name: Recursively remove unarchive directory
  ansible.builtin.file:
    path: "{{ DROPBOX_UNARCHIVE }}"
    state: absent

- name: Ensure unarchive directory exists
  ansible.builtin.file:
    path: "{{ DROPBOX_UNARCHIVE }}"
    state: directory

- name: Unarchive Dropbox Linux x86_64 Offline Installer
  ansible.builtin.unarchive:
    src: "{{ zoidy_homefries_downloads_dir }}/{{ DROPBOX_ARCHIVE }}"
    dest: "{{ DROPBOX_UNARCHIVE }}/"
    # The archive is on the remote system, not the host controller.
    remote_src: yes

- name: Copy dist files to ~/.dropbox-dist
  ansible.builtin.copy:
    src: "{{ DROPBOX_UNARCHIVE }}/.dropbox-dist"
    dest: "{{ ansible_env.HOME }}/.dropbox-dist/"
    # The default:
    force: true
    # Copy of managed mode:
    remote_src: true

- name: Remove unarchive dist files
  file:
    path: "{{ DROPBOX_UNARCHIVE }}/.dropbox-dist"
    state: absent

# ***

- name: Fetch Dropbox CLI script
  get_url:
    url: "https://www.dropbox.com/download?dl=packages/dropbox.py"
    dest: "{{ DROPBOX_UNARCHIVE }}/"

- name: Make Dropbox CLI executable
  file:
    path: "{{ DROPBOX_UNARCHIVE }}/dropbox.py"
    mode: 0775

- name: Symlink dropbox.py from user bin as dropbox
  ansible.builtin.file:
    src: "{{ DROPBOX_UNARCHIVE }}/dropbox.py"
    dest: "{{ ansible_env.HOME }}/.local/bin/dropbox"
    state: link

- name: Install Dropbox Desktop file
  ansible.builtin.copy:
    src: dropbox.desktop
    dest: "{{ ansible_env.HOME }}/.config/autostart/dropbox.desktop"

# ***

- name: Tell user to run Dropbox to complete setup
  ansible.builtin.pause:
    seconds: 0
    prompt: |
       

      CHORE » Setup Dropbox

      - If you had a previous version installed, you might want
        to blow it away first:

          command rm -rf ~/.dropbox/ ~/.dropbox-dist/

      - The first time you run Dropbox, it opens a browser window
        so you can logon and wire your account.

        - Start the daemon:

            dropboxd &

        - In the new browser window:

          - Enter your email and password.

          - Select *✓ Trust this computer*
            and enter your 2fa credentials.

      - Configure Dropbox.

        - Right-click the notification widget, choose Preferences...

          - Sync [tab] > Dropbox folder location

            Verify set to `/home/<user>/Dropbox` (or wherever you like it).

          - Note that this task installs the autostart Desktop file,
            so you can ignore the startup option (which will unset
            itself after you close and reopen the dialog anyway):

            - General [tab] > System

              ✓ Start Dropbox on system startup

       
    # ↑ This is an em space ( ), necessary to protect trailing newline(s)
    #   from chomp().
    #   - There's also an em space on the first line, in case you want
    #     first line of content-containing output to be indented.


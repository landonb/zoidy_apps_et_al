---

# USAGE: Task downloads and installs Various Fonts from zip archives.

# ***

# *** Local variables (Facts).

- set_fact:
    FONT_URL_ZIPS:
      # 2019-01-03: Skip it: The complete Noto family zip is 1.1G.
      #   And the extracted directory is 1.5G. Get only what's relevant.
      #   - url_base: "https://noto-website-2.storage.googleapis.com/pkgs"
      #     zip_base: "Noto-hinted"
      - url_base: "https://noto-website-2.storage.googleapis.com/pkgs"
        zip_base: "NotoSans-hinted.zip"
      - url_base: "https://noto-website-2.storage.googleapis.com/pkgs"
        zip_base: "NotoSerif-hinted.zip"
      - url_base: "https://noto-website-2.storage.googleapis.com/pkgs"
        zip_base: "NotoSansDisplay-hinted.zip"
      - url_base: "https://noto-website-2.storage.googleapis.com/pkgs"
        zip_base: "NotoSerifDisplay-hinted.zip"
      - url_base: "https://noto-website-2.storage.googleapis.com/pkgs"
        zip_base: "NotoMono-hinted.zip"
      - url_base: "https://noto-website-2.storage.googleapis.com/pkgs"
        zip_base: "NotoSansMono-hinted.zip"
      - url_base: "https://noto-website-2.storage.googleapis.com/pkgs"
        zip_base: "NotoColorEmoji-unhinted.zip"
      - url_base: "https://noto-website-2.storage.googleapis.com/pkgs"
        zip_base: "NotoEmoji-unhinted.zip"

      # 2023-04-25: "HTTP Error 404: Not Found"
      #
      # - url_base: http://dl.1001fonts.com
      #   zip_base: santos-dumont.zip
      # - url_base: http://dl.1001fonts.com
      #   zip_base: pinewood.zip
      # - url_base: http://dl.1001fonts.com
      #   zip_base: open-sans.zip

      # Arial MT.
      - url_base: https://www.cufonfonts.com/download/font
        zip_base: arial-mt
        # MEH: Add option to name ~/.fonts destination.
        # - If you visit https://www.cufonfonts.com/font/arial-mt and click
        #   *Download*, it opens file download dialog and suggests the name,
        #   `arial-mt-cufonfonts.zip` (though with the direct link, the file
        #   is simply named `arial-mt`). Either way, to match other directories
        #   in ~/.fonts, we could specify the destination name, e.g.,
        #  dst_base: ArialMT

      # Frutiger LT Std.
      # https://font.gooova.com/fonts/13221/frutiger-lt-std-font.html#google_vignette
      - url_base: https://font.gooova.com/d/13221
        zip_base: frutiger-lt-std-font.zip
        #  dst_base: FrutigerLTStd

      # 2023-04-25: "HTTP Error 404: Not Found", though addy looks correct...
      #   https://www.wfonts.com/font/wingdings-2
      #
      # # Wingus, Dingus, listen up.
      # # - Can also fetch direct (identical TTF): https://www.fontsupply.com/fonts/WINGDNG2.TTF
      # # - Also read Wingdings-2 in `sudo apt install gsfonts-x11` but didn't see it.
      # - url_base: https://www.wfonts.com/download/data/2016/03/29/wingdings-2/wingdings-2.zip
      #   zip_base: wingdings-2.zip

- set_fact:
    zip_file_regex: >-
      ^.zip$

- set_fact:
    FONT_URL_TTFS:
      # FIXME/2022-01-24 04:41: This will place duplicate of wingdings-2.zip, but curious
      # that it'll run (never tested) and what'll happen (with the duplicate file).
      - url_base: "https://www.fontsupply.com/fonts"
        ttf_base: "WINGDNG2.TTF"

# ***

- name: Ensure font download directory exists
  file: path="{{ zoidy_homefries_dls_fonts_dir }}/" state=directory

- name: Ensure destination font directories exist
  file:
    path="{{ ansible_env.HOME }}/.fonts/{{ item.zip_base | regex_replace(zip_file_regex) }}/"
    state=directory
  loop: "{{ FONT_URL_ZIPS }}"

# ***

# PROFILING: 2019-03-19: Task took: 22.51s (currently penutimate slowest task).
- name: Fetch font ZIP archives
  get_url:
    url: "{{ item.url_base }}/{{ item.zip_base }}"
    dest: "{{ zoidy_homefries_dls_fonts_dir }}/"
  loop: "{{ FONT_URL_ZIPS }}"

# Copy the archive contents to the ~/.fonts directory, named without the .zip extension.
- name: Unarchive the font archives
  unarchive:
    remote_src: yes
    src: "{{ zoidy_homefries_dls_fonts_dir }}/{{ item.zip_base }}"
    dest: "{{ ansible_env.HOME }}/.fonts/{{ item.zip_base | regex_replace(zip_file_regex) }}/"
  loop: "{{ FONT_URL_ZIPS }}"
  notify: Build font information cache files

# ***

- name: Fetch font TTF files
  get_url:
    url: "{{ item.url_base }}/{{ item.ttf_base }}"
    dest: "{{ ansible_env.HOME }}/.fonts/{{ item.ttf_base }}"
  loop: "{{ FONT_URL_TTFS }}"
  notify: Build font information cache files


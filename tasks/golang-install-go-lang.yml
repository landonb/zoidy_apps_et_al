---

# USAGE: Task downloads and installs Go from tar archive.

# ***

# Ref:
#
#   # Redirects from https://golang.org/project/
#   https://go.dev/project
#
#   https://go.dev/dl/
#
#   https://go.dev/doc/devel/release

# *** Local variables (Facts).

# CXREF: https://go.dev/dl/

# MAYBE/2019-10-17: Automate version determinating.

# HSTRY/2023-04-28: Verisions I've used:
#
# - 2019-10-17: GOLANG_VER: '1.13.3'
# - 2020-07-07: GOLANG_VER: '1.14.4'
# - 2023-04-22: GOLANG_VER: '1.20.3' aka go1.20 [2023-02-01]
- ansible.builtin.set_fact:
    # USYNC: See also same GOLANG_VER in task dispatcher:
    #
    #   ~/.kit/working/ansible/roles/zoidy_apps_et_al/tasks/all-init-go-lang.yml
    GOLANG_VER: '1.20.3'
    GOLANG_XSUM: "979694c2c25c735755bf26f4f45e19e64e4811d661dd07b8c010f7a8e18adfca"

- ansible.builtin.set_fact:
    GOLANG_DIR: "go{{ GOLANG_VER }}.linux-amd64"

- ansible.builtin.set_fact:
    GOLANG_TAR: "{{ GOLANG_DIR }}.tar.gz"

- ansible.builtin.set_fact:
    # E.g.,
    #   https://dl.google.com/go/go1.11.4.linux-amd64.tar.gz
    GOLANG_URI: "https://dl.google.com/go/{{ GOLANG_TAR }}"

# *** Alert user if newer version.

# NOTE: 2019-03-19: Surprisingly, fetching golang archive can be a while, e.g., 17.09s.
# So skip if already downloaded.
- name: Stat golang release archive
  ansible.builtin.stat: path="{{ zoidy_homefries_downloads_dir }}/{{ GOLANG_TAR }}"
  register: golang_tar_f

# FIXME/2018-12-23: Run this and other curl's, or check GitHubs, for latest versions (of things).

- name: Fetch latest golang release
  ansible.builtin.get_url:
    url: "{{ GOLANG_URI }}"
    dest: "{{ zoidy_homefries_downloads_dir }}/"
    checksum: "sha256:{{ GOLANG_XSUM }}"
  when: not golang_tar_f.stat.exists

# The archive is contained within a directory not named with the version,
# i.e., simply 'go', so use the full archive name.
- name: Ensure ~/.download/go<version>.linux-amd64 directory exists
  ansible.builtin.file: path="{{ zoidy_homefries_downloads_dir }}/{{ GOLANG_DIR }}" state=directory

- name: Unarchive the golang release archive
  ansible.builtin.unarchive:
    src: "{{ zoidy_homefries_downloads_dir }}/{{ GOLANG_TAR }}"
    dest: "{{ zoidy_homefries_downloads_dir }}/{{ GOLANG_DIR }}/"
    remote_src: yes

# Done:
#  - fail: msg="VERIFY UNPACK"

- name: Check obsolete godoc symlink (replaced by `go doc`)
  ansible.builtin.stat: path="{{ ansible_env.HOME }}/.local/bin/godoc"
  register: local_bin_godoc

- name: Remove obsolete godoc symlink (replaced by `go doc`)
  ansible.builtin.file:
    state: absent
    path: "{{ ansible_env.HOME }}/.local/bin/godoc"
  when: local_bin_godoc.stat.exists and local_bin_godoc.stat.islnk

- name: Symlink golang binary from user local bin
  ansible.builtin.file:
    src: "{{ zoidy_homefries_downloads_dir }}/{{ GOLANG_DIR }}/go/bin/{{ item }}"
    dest: "{{ ansible_env.HOME }}/.local/bin/{{ item }}"
    state: link
  loop:
    - go
    - gofmt


---

# https://github.com/user-none/KDocker
# (OLD: https://launchpad.net/kdocker.)

# ***

- set_fact:
    KDOCKER_BRANCH: "master"

# ***

- set_fact:
    KDOCKER_DIR: "{{ zoidy_homefries_kdocker_repo_path }}"

- set_fact:
    KDOCKER_DIR: "{{ zoidy_homefries_downloads_dir }}/KDocker"
  when: KDOCKER_DIR == ""

- debug: msg="KDOCKER_DIR={{ KDOCKER_DIR }}"

- name: KDocker » git clone
  git:
    repo: "git@github.com:user-none/KDocker.git"
    dest: "{{ KDOCKER_DIR }}"
    remote: "{{ zoidy_homefries_kdocker_repo_remote }}"
    version: "{{ KDOCKER_BRANCH }}"
  register: gitclone
  when: False

# ***

- name: KDocker » Ensure dev libs available
  apt: name="{{ item }}" state="present"
  loop:
    - qt5-qmake
    - libqt5x11extras5-dev
    - libxmu-dev
    # For /usr/include/X11/Xlib-xcb.h
    - libx11-xcb-dev
    # The INSTALL mentions two other libs (well, their CentOS 7 equivalents):
    #  - libxcb1-dev  # INSTALL's CentOS 7 equiv.: libxcb-devel
    #    - 2023-04-23: Added 'libx11-xcb-dev' for fresh Linux Mint 21.1 setup,
    #      and musing the 'libxcb1-dev' that INSTALL refs might be equivalent.
    #  - libxpm-dev   # INSTALL's CentOS 7 equiv.: libXpm-devel
    # but I got by without.
  become: yes

# SKIP: Per INSTALL: No need to edit ``kdocker.pro``.

# Not sure why, but `args: chdir="{{ KDOCKER_DIR }}"` not
# working, need to run `cd` in the shell command, instead.

- name: KDocker » qmake
  ansible.builtin.shell: cd {{ KDOCKER_DIR }} && QT_SELECT=5 qmake

- name: KDocker » make
  ansible.builtin.shell: cd {{ KDOCKER_DIR }} && QT_SELECT=5 make

# Rather than `sudo make install`, just symlink it,
# because (so far) only wired to the Spotify app,
# via zoidy_panelsweet/templates/launchers/spotify.desktop.j2;
# i.e., I don't ever call KDocker myself from the command line.

- name: KDocker » symlink
  file:
    src: "{{ KDOCKER_DIR }}/kdocker"
    dest: "{{ ansible_env.HOME }}/.local/bin/kdocker"
    state: link

# MAYBE/2020-03-06 11:49: Next time you build this task, see if
# this file is created, and if so, just remove it, i.e., rather
# than creating a .gitignore.local just to ignore this one file:
#   .qmake.stash

